# typed: strong
# This is an autogenerated file for Rails routes.
# Please run bundle exec rake rails_rbi:routes to regenerate.
class ActionController::Base
  include GeneratedUrlHelpers
end

module ActionView::Helpers
  include GeneratedUrlHelpers
end

class ActionMailer::Base
  include GeneratedUrlHelpers
end

module GeneratedUrlHelpers
  # Sigs for route /teams(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def teams_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def teams_url(*args, **kwargs); end

  # Sigs for route /teams/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_team_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_team_url(*args, **kwargs); end

  # Sigs for route /teams/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_team_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_team_url(*args, **kwargs); end

  # Sigs for route /teams/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def team_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def team_url(*args, **kwargs); end

  # Sigs for route /sessions(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sessions_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sessions_url(*args, **kwargs); end

  # Sigs for route /
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_url(*args, **kwargs); end

  # Sigs for route /dashboard/index(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def dashboard_index_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def dashboard_index_url(*args, **kwargs); end

  # Sigs for route /slack/pairing(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def pairing_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def pairing_url(*args, **kwargs); end

  # Sigs for route /pghero
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def pg_hero_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def pg_hero_url(*args, **kwargs); end

  # Sigs for route /sidekiq
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sidekiq_web_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sidekiq_web_url(*args, **kwargs); end

  # Sigs for route /admin/login(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_user_session_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_user_session_url(*args, **kwargs); end

  # Sigs for route /admin/login(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_user_session_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_user_session_url(*args, **kwargs); end

  # Sigs for route /admin/logout(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def destroy_admin_user_session_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def destroy_admin_user_session_url(*args, **kwargs); end

  # Sigs for route /admin/password/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_user_password_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_user_password_url(*args, **kwargs); end

  # Sigs for route /admin/password/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_user_password_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_user_password_url(*args, **kwargs); end

  # Sigs for route /admin/password(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_user_password_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_user_password_url(*args, **kwargs); end

  # Sigs for route /admin(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_root_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_root_url(*args, **kwargs); end

  # Sigs for route /admin/dashboard(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_dashboard_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_dashboard_url(*args, **kwargs); end

  # Sigs for route /admin/admin_users/batch_action(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def batch_action_admin_admin_users_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def batch_action_admin_admin_users_url(*args, **kwargs); end

  # Sigs for route /admin/admin_users(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_admin_users_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_admin_users_url(*args, **kwargs); end

  # Sigs for route /admin/admin_users/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_admin_user_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_admin_user_url(*args, **kwargs); end

  # Sigs for route /admin/admin_users/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_admin_user_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_admin_user_url(*args, **kwargs); end

  # Sigs for route /admin/admin_users/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_admin_user_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_admin_user_url(*args, **kwargs); end

  # Sigs for route /admin/users/batch_action(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def batch_action_admin_users_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def batch_action_admin_users_url(*args, **kwargs); end

  # Sigs for route /admin/users(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_users_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_users_url(*args, **kwargs); end

  # Sigs for route /admin/users/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_user_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_user_url(*args, **kwargs); end

  # Sigs for route /admin/users/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_user_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_user_url(*args, **kwargs); end

  # Sigs for route /admin/users/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_user_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_user_url(*args, **kwargs); end

  # Sigs for route /admin/comments(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_comments_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_comments_url(*args, **kwargs); end

  # Sigs for route /admin/comments/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_comment_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_comment_url(*args, **kwargs); end

  # Sigs for route /users/sign_in(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_user_session_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_user_session_url(*args, **kwargs); end

  # Sigs for route /users/sign_in(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_session_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_session_url(*args, **kwargs); end

  # Sigs for route /users/sign_out(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def destroy_user_session_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def destroy_user_session_url(*args, **kwargs); end

  # Sigs for route /users/auth/slack(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_slack_omniauth_authorize_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_slack_omniauth_authorize_url(*args, **kwargs); end

  # Sigs for route /users/auth/slack/callback(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_slack_omniauth_callback_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_slack_omniauth_callback_url(*args, **kwargs); end

  # Sigs for route /users/auth/sign_in_with_slack(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_sign_in_with_slack_omniauth_authorize_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_sign_in_with_slack_omniauth_authorize_url(*args, **kwargs); end

  # Sigs for route /users/auth/sign_in_with_slack/callback(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_sign_in_with_slack_omniauth_callback_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_sign_in_with_slack_omniauth_callback_url(*args, **kwargs); end

  # Sigs for route /users/password/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_user_password_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_user_password_url(*args, **kwargs); end

  # Sigs for route /users/password/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_user_password_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_user_password_url(*args, **kwargs); end

  # Sigs for route /users/password(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_password_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_password_url(*args, **kwargs); end

  # Sigs for route /users/cancel(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def cancel_user_registration_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def cancel_user_registration_url(*args, **kwargs); end

  # Sigs for route /users/sign_up(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_user_registration_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_user_registration_url(*args, **kwargs); end

  # Sigs for route /users/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_user_registration_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_user_registration_url(*args, **kwargs); end

  # Sigs for route /users(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_registration_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def user_registration_url(*args, **kwargs); end

  # Sigs for route /users/slack_accounts/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_slack_account_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def users_slack_account_url(*args, **kwargs); end

  # Sigs for route /rails/action_mailbox/postmark/inbound_emails(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_url(*args, **kwargs); end

  # Sigs for route /rails/action_mailbox/relay/inbound_emails(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_relay_inbound_emails_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_relay_inbound_emails_url(*args, **kwargs); end

  # Sigs for route /rails/action_mailbox/sendgrid/inbound_emails(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_url(*args, **kwargs); end

  # Sigs for route /rails/action_mailbox/mandrill/inbound_emails(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_url(*args, **kwargs); end

  # Sigs for route /rails/action_mailbox/mandrill/inbound_emails(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_url(*args, **kwargs); end

  # Sigs for route /rails/action_mailbox/mailgun/inbound_emails/mime(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_url(*args, **kwargs); end

  # Sigs for route /rails/conductor/action_mailbox/inbound_emails(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_url(*args, **kwargs); end

  # Sigs for route /rails/conductor/action_mailbox/inbound_emails/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_url(*args, **kwargs); end

  # Sigs for route /rails/conductor/action_mailbox/inbound_emails/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_rails_conductor_inbound_email_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_rails_conductor_inbound_email_url(*args, **kwargs); end

  # Sigs for route /rails/conductor/action_mailbox/inbound_emails/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_email_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_email_url(*args, **kwargs); end

  # Sigs for route /rails/conductor/action_mailbox/:inbound_email_id/reroute(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/blobs/:signed_id/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_service_blob_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_service_blob_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/representations/:signed_blob_id/:variation_key/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_blob_representation_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_blob_representation_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/disk/:encoded_key/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_disk_service_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_disk_service_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/disk/:encoded_token(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_rails_disk_service_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/direct_uploads(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_direct_uploads_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args, **kwargs); end
end

module GeneratedUrlHelpers
  # Sigs for route (/:database)/space(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def space_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def space_url(*args, **kwargs); end

  # Sigs for route (/:database)/space/:relation(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def relation_space_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def relation_space_url(*args, **kwargs); end

  # Sigs for route (/:database)/index_bloat(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def index_bloat_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def index_bloat_url(*args, **kwargs); end

  # Sigs for route (/:database)/live_queries(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def live_queries_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def live_queries_url(*args, **kwargs); end

  # Sigs for route (/:database)/queries(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def queries_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def queries_url(*args, **kwargs); end

  # Sigs for route (/:database)/queries/:query_hash(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def show_query_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def show_query_url(*args, **kwargs); end

  # Sigs for route (/:database)/system(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def system_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def system_url(*args, **kwargs); end

  # Sigs for route (/:database)/cpu_usage(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def cpu_usage_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def cpu_usage_url(*args, **kwargs); end

  # Sigs for route (/:database)/connection_stats(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_stats_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_stats_url(*args, **kwargs); end

  # Sigs for route (/:database)/replication_lag_stats(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def replication_lag_stats_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def replication_lag_stats_url(*args, **kwargs); end

  # Sigs for route (/:database)/load_stats(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def load_stats_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def load_stats_url(*args, **kwargs); end

  # Sigs for route (/:database)/free_space_stats(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def free_space_stats_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def free_space_stats_url(*args, **kwargs); end

  # Sigs for route (/:database)/explain(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def explain_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def explain_url(*args, **kwargs); end

  # Sigs for route (/:database)/tune(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def tune_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def tune_url(*args, **kwargs); end

  # Sigs for route (/:database)/connections(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connections_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connections_url(*args, **kwargs); end

  # Sigs for route (/:database)/maintenance(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def maintenance_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def maintenance_url(*args, **kwargs); end

  # Sigs for route (/:database)/kill(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def kill_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def kill_url(*args, **kwargs); end

  # Sigs for route (/:database)/kill_long_running_queries(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def kill_long_running_queries_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def kill_long_running_queries_url(*args, **kwargs); end

  # Sigs for route (/:database)/kill_all(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def kill_all_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def kill_all_url(*args, **kwargs); end

  # Sigs for route (/:database)/enable_query_stats(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def enable_query_stats_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def enable_query_stats_url(*args, **kwargs); end

  # Sigs for route (/:database)/reset_query_stats(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def reset_query_stats_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def reset_query_stats_url(*args, **kwargs); end

  # Sigs for route (/:database)/system_stats(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def system_stats_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def system_stats_url(*args, **kwargs); end

  # Sigs for route (/:database)/query_stats(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def query_stats_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def query_stats_url(*args, **kwargs); end

  # Sigs for route /(:database)(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_url(*args, **kwargs); end
end
