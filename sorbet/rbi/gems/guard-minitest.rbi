# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/guard-minitest/all/guard-minitest.rbi
#
# guard-minitest-2.4.6

module Guard
end
class Guard::Minitest < Guard::Plugin
  def initialize(options = nil); end
  def reload; end
  def run_all; end
  def run_on_additions(paths); end
  def run_on_modifications(paths = nil); end
  def run_on_removals(paths); end
  def runner; end
  def runner=(arg0); end
  def start; end
  def stop; end
  def throw_on_failed_tests; end
end
class Guard::Minitest::Inspector
  def _join_for_glob(fragments); end
  def _test_file?(path); end
  def _test_files_for_paths(paths = nil); end
  def all_test_files; end
  def clean(paths); end
  def clean_all; end
  def clear_memoized_test_files; end
  def initialize(test_folders, test_file_patterns); end
  def test_file_patterns; end
  def test_folders; end
end
class Guard::Minitest::Runner
  def _commander(paths); end
  def _run(*args); end
  def _run_possibly_bundled_command(paths, all); end
  def all_after_pass?; end
  def all_env; end
  def all_paths?(paths); end
  def autorun?; end
  def base_env; end
  def bundler?; end
  def cli_options; end
  def drb?; end
  def drb_command(paths); end
  def generate_env(all = nil); end
  def generate_includes(include_test_folders = nil); end
  def include_folders; end
  def initialize(options = nil); end
  def inspector; end
  def inspector=(arg0); end
  def minitest_command(paths, all); end
  def parse_deprecated_options; end
  def relative_paths(paths); end
  def ruby_command(paths); end
  def rubygems?; end
  def run(paths, options = nil); end
  def run_all; end
  def run_on_additions(_paths); end
  def run_on_modifications(paths = nil); end
  def run_on_removals(_paths); end
  def spring?; end
  def spring_command(paths); end
  def test_file_patterns; end
  def test_folders; end
  def zeus?; end
  def zeus_command(paths); end
end
class Guard::Minitest::Utils
  def self.minitest_version; end
  def self.minitest_version_gte_5?; end
  def self.minitest_version_gte_5_0_4?; end
end
class Guard::MinitestVersion
end
